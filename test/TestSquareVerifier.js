// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require("Verifier");
// - use the contents from proof.json generated from zokrates steps
const Proof = require("./proof.json");

contract("Verifier", (accounts) => {
  const account_one = accounts[0];

  describe("Test square verifier", function () {
    beforeEach(async function () {
      this.contract = await Verifier.new({
        from: account_one,
      });
    });

    it("Test verification with correct proof", async function () {
      let isVerified = false;
      try {
        //console.log(this.contract);
        isVerified = await this.contract.verifyTx.call(
          Proof.proof.a,
          Proof.proof.b,
          Proof.proof.c,
          Proof.inputs,
          {
            from: account_one,
          }
        );
        //console.log("isVerified 1 :", isVerified);
      } catch (error) {
        console.log(error);
      }
      assert.isTrue(isVerified, "verification with correct proof failed.");
    });

    it("Test verification with incorrect proof", async function () {
      let isVerified = false;
      try {
        isVerified = await this.contract.verifyTx(
          Proof.proof.c,
          Proof.proof.b,
          Proof.proof.a,
          Proof.inputs,
          {
            from: account_one,
          }
        );
        //console.log("isVerified 2 :", isVerified);
      } catch (error) {
        console.log(error);
      }
      assert.isFalse(isVerified, "verification failed.");
    });
  });
});
